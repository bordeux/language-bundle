<?php
namespace Bordeux\LanguageBundle\Admin;

use Knp\Menu\ItemInterface as MenuItemInterface;

use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Admin\AdminInterface;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;

class LanguageAdmin extends Admin
{

    protected $classnameLabel = "Languages";


    // Fields to be shown on create/edit forms
    protected function configureFormFields(FormMapper $formMapper)
    {
        $formMapper
            ->with('Main',
                array())
            ->add('name')
            ->add('locale')
            ->add('currency')
            ->add('alias')
            ->add('active')
            ->end();

    }

    // Fields to be shown on filter forms
    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper
            ->add('id')
            ->add('name')
            ->add('locale')
            ->add('currency')
            ->add('alias')
            ->add('active');
    }

    // Fields to be shown on lists
    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper
            ->addIdentifier('id')
            ->addIdentifier('name')
            ->addIdentifier('locale')
            ->addIdentifier('currency')
            ->addIdentifier('alias')
            ->add('active');
    }


    public function clearCache()
    {
        $this->getConfigurationPool()
            ->getContainer()
            ->get("bordeux.language.manager")
            ->clearTranslationCache()
            ->clearLanguageList();
    }

    public function postUpdate($object)
    {
        parent::postUpdate($object); // TODO: Change the autogenerated stub
        $this->clearCache();
    }

    public function postPersist($object)
    {
        parent::postPersist($object); // TODO: Change the autogenerated stub
        $this->clearCache();
    }

    public function postRemove($object)
    {
        parent::postRemove($object); // TODO: Change the autogenerated stub
        $this->clearCache();
    }


    protected function configureTabMenu(MenuItemInterface $menu, $action, AdminInterface $childAdmin = null)
    {
        $admin = $this->isChild() ? $this->getParent() : $this;
        $id = $admin->getRequest()->get('id');


        $subject = $this->getSubject();

        $id && $subject && !$subject->getAlias() && $menu->addChild(
            "Translations",
            array('uri' => $admin->generateUrl('sonata.admin.bordeux.language.translation.list', array('id' => $id)))
        );

        parent::configureTabMenu($menu, $action, $childAdmin); // TODO: Change the autogenerated stub
    }


}