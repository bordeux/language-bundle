<?php
namespace Bordeux\LanguageBundle\Admin;

use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Route\RouteCollection;
use Bordeux\LanguageBundle\Entity\LanguageTranslation;

class LanguageTranslationAdmin extends Admin
{

    protected $classnameLabel = "Translations";

    /**
     * @author Krzysztof Bednarczyk
     * @param RouteCollection $collection
     */
    public function configureRoutes(RouteCollection $collection)
    {

    }

    public function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this->parentAssociationMapping = 'language';
    }

    // Fields to be shown on create/edit forms
    protected function configureFormFields(FormMapper $formMapper)
    {

        $formMapper
            ->with('Main',
                array())
            ->add('translation')
            ->add('translated')
            ->end();

    }

    // Fields to be shown on filter forms
    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper
            ->add('id')
            ->add('domain')
            //->add('language')
            ->add('translation')
            ->add('translated')
            ->add('languageToken.token', null, [
                "label" => "Initial value"
            ]);
    }

    // Fields to be shown on lists
    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper
            ->addIdentifier('id')
            ->add('languageToken.token', null, [
                "label" => "Initial value"
            ])
            ->add('translation', null, [
                "editable" => true
            ])
            ->add('domain')
            ->add('translated', null, [
                "editable" => true
            ])
            ->add('_action', 'actions', array(
                'actions' => array(
                    'edit' => array(),
                )
            ));
    }

    /**
     * @author Krzysztof Bednarczyk
     * @param LanguageTranslation $object
     */
    public function postUpdate($object)
    {
        parent::postUpdate($object); // TODO: Change the autogenerated stub

        $this->configurationPool
            ->getContainer()
            ->get("bordeux.language.manager")
            ->clearTranslationCache(
                $object->getLanguage()
            );
    }


}